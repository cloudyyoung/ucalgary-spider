generator client {
    provider        = "prisma-client-py"
    previewFeatures = ["multiSchema", "fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    schemas  = ["catalog"]
}

enum CourseComponent {
    LAB
    LECTURE
    SECTION
    SEMINAR
    SUPERVISED_STUDY
    TUTORIAL

    @@schema("catalog")
}

enum Career {
    UNDERGRADUATE_PROGRAM
    GRADUATE_PROGRAM
    MEDICINE_PROGRAM

    @@schema("catalog")
}

model Course {
    id         String   @id @default(uuid())
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    cid           String @unique
    code          String @unique
    course_number String

    subject_code String
    subject      Subject @relation(fields: [subject_code], references: [code])

    description String
    name        String
    long_name   String
    notes       String?
    version     Int
    units       Int
    aka         String?

    prereq       String?
    prereq_json  Json?
    coreq        String?
    coreq_json   Json?
    antireq      String?
    antireq_json Json?

    is_active     Boolean
    is_multi_term Boolean
    is_nogpa      Boolean
    is_repeatable Boolean

    components      CourseComponent[]
    course_group_id String
    coursedog_id    String

    course_created_at           DateTime
    course_effective_start_date DateTime
    course_last_updated_at      DateTime

    departments Department[]
    faculties   Faculty[]

    career     Career
    topics     CourseTopic[]
    grade_mode GradeMode

    search_vector Unsupported("tsvector")? @default(dbgenerated())

    @@unique([subject_code, course_number], map: "course_subject_course_number_unique")
    @@index([search_vector], type: Gin, map: "course_search_vector_gin")
    @@map("courses")
    @@schema("catalog")
}

model CourseTopic {
    id         String   @id @default(uuid())
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    number        String  @unique @map("number")
    name          String  @unique
    long_name     String  @unique
    description   String
    is_repeatable Boolean
    units         Int
    link          String

    course_id String
    course    Course @relation(fields: [course_id], references: [id])

    @@unique([number, course_id], map: "course_topic_number_course_unique")
    @@map("courses_topics")
    @@schema("catalog")
}

model Faculty {
    id         String   @id @default(uuid())
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    name String @unique
    code String @unique

    departments Department[]
    courses     Course[]

    @@index([code], map: "faculty_code_unique")
    @@map("faculties")
    @@schema("catalog")
}

model Department {
    id         String   @id @default(uuid())
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    name         String  @unique
    display_name String
    code         String  @unique
    is_active    Boolean

    faculties Faculty[]
    courses   Course[]
    subjects  Subject[]

    @@map("departments")
    @@schema("catalog")
}

enum GradeMode {
    CDF // Credit/D grade/Fail
    CNC // Credit/No Credit
    CRF // Credit/Fail
    ELG // English Language Graded
    GRD // Graded
    MTG // Multi-Term

    @@schema("catalog")
}

enum TermName {
    WINTER
    SPRING
    SUMMER
    FALL

    @@schema("catalog")
}

model Term {
    id         String   @id @default(uuid())
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    term_id String   @unique
    year    Int
    name    TermName

    @@map("terms")
    @@schema("catalog")
}

model Subject {
    id         String   @id @default(uuid())
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    code  String @unique
    title String @unique

    departments Department[]
    courses     Course[]

    @@unique([code, title], map: "subject_code_title_unique")
    @@unique([title], map: "subject_title_unique")
    @@unique([code], map: "subject_code_unique")
    @@map("subjects")
    @@schema("catalog")
}
